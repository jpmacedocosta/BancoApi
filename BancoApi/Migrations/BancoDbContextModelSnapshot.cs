// <auto-generated />
using System;
using BancoApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BancoApi.Migrations
{
    [DbContext(typeof(BancoDbContext))]
    partial class BancoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BancoApi.Domain.Entities.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("documento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("saldo");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("UsuarioAlteracao")
                        .HasColumnType("text")
                        .HasColumnName("usuario_alteracao");

                    b.HasKey("Id");

                    b.HasIndex("Documento")
                        .HasDatabaseName("ix_contas_documento");

                    b.HasIndex("Numero")
                        .IsUnique()
                        .HasDatabaseName("ix_contas_numero");

                    b.ToTable("contas", (string)null);
                });

            modelBuilder.Entity("BancoApi.Domain.Entities.Transferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaDestinoId")
                        .HasColumnType("integer")
                        .HasColumnName("conta_destino_id");

                    b.Property<int>("ContaOrigemId")
                        .HasColumnType("integer")
                        .HasColumnName("conta_origem_id");

                    b.Property<DateTime>("DataTransferencia")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_transferencia");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("ContaDestinoId")
                        .HasDatabaseName("ix_transferencia_conta_destino_id");

                    b.HasIndex("ContaOrigemId")
                        .HasDatabaseName("ix_transferencia_conta_origem_id");

                    b.ToTable("transferencias", (string)null);
                });

            modelBuilder.Entity("BancoApi.Domain.Entities.Transferencia", b =>
                {
                    b.HasOne("BancoApi.Domain.Entities.Conta", "ContaDestino")
                        .WithMany()
                        .HasForeignKey("ContaDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_transferencia_conta_destino");

                    b.HasOne("BancoApi.Domain.Entities.Conta", "ContaOrigem")
                        .WithMany()
                        .HasForeignKey("ContaOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_transferencia_conta_origem");

                    b.Navigation("ContaDestino");

                    b.Navigation("ContaOrigem");
                });
#pragma warning restore 612, 618
        }
    }
}
